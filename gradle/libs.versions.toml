[versions]

# Build Tools
agp = "8.8.2"
androidTools = "31.7.3"
desugar_jdk_libs = "2.1.3"
ksp = "2.0.21-1.0.25"

# Kotlin & Coroutines
kotlin = "2.0.21"
coroutines = "1.9.0"

# Core Android Libraries
coreKtx = "1.15.0"
appcompat = "1.7.0"

# Image Download
coilCompose = "2.6.0"

# Static Analysis
annotation = "1.9.1"

# UI Libraries
activityCompose = "1.10.1"
composeBom = "2025.03.01"
materialIconsExtended = "1.7.8"
navigationCompose = "2.8.6"
material = "1.12.0"
coreSplashScreen = "1.0.1"
contraintCompose = "1.0.1"

# Lifecycle & Dependency Injection
lifecycleRuntimeKtx = "2.8.7"
koin = "4.0.0"

# Serialization
kotlinx-serialization = "1.7.3"

# testing Libraries
junit = "4.13.2"
junit5 = "5.10.1"
junit5-plugin = "1.10.0.0"
junit5-compose = "1.4.0"
mockk = "1.13.11"
assertk = "0.28.1"
turbine = "0.7.0"
composeUiTestManifest = "1.6.8"
coroutines-test = "1.8.1"
junitVersion = "1.1.5"
espressoCore = "3.5.1"

# Database & Persistance
room = "2.6.1"
datastorePreferences = "1.1.2"

# Logger
timber = "5.0.1"

# Location
maps = "6.1.2"
gmsLocation = "21.3.0"

# Background tasks
work = "2.10.0"

# Security
securityCryptoKtx = "1.1.0-alpha06"

# Network
ktor = "2.3.8"
ktorClientLogging = "2.3.8"
ktorServerCallLogging = "2.3.7"

# Play Services
playServicesTime = "16.0.1"

# Project Versions
projectApplicationId = "com.jnasser.weatherapp"
projectVersionName = "1.0"
projectMinSdkVersion = "24"
projectTargetSdkVersion = "35"
projectCompileSdkVersion = "35"
projectVersionCode = "1"
storage = "1.4.2"
composeMaterial = "1.4.1"

[libraries]
# Jetpack Compose UI Libraries
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-constraintlayout-compose = { group = "androidx.constraintlayout", name = "constraintlayout-compose", version.ref = "contraintCompose" }

# Core Android Libraries
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCryptoKtx" }
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }

# Image download
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }

# Kotlin & Coroutines
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }

# Build Tools & Annotation Processor
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }

# Lifecycle Management
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }

# Logging
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Network
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientLogging" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktorServerCallLogging" }

# Dependency Injection
koin-android-workmanager = { group = "io.insert-koin", name = "koin-androidx-workmanager", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

# Database & Persistance
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-datastore-preference = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastorePreferences" }

# Background Tasks
androidx-work = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "work" }

# Material Desing Components
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Statis Analysis
annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotation" }

# Play Services
play-services-time = { group = "com.google.android.gms", name = "play-services-time", version.ref = "playServicesTime" }

# Location
google-maps-android-compose = { module = "com.google.maps.android:maps-compose", version.ref = "maps" }
google-android-gms-play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "gmsLocation"}

# Test dependencies
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
junit5-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit5-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit5-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit5-android-test-compose = { module = "de.mannodermaus.junit5:android-test-compose", version.ref = "junit5-compose" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines-test" }
androidx-storage = { group = "androidx.test.services", name = "storage", version.ref = "storage" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
room = { id = "androidx.room", version.ref = "room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Convention Plugins
weatherapp-android-application = { id = "weatherapp.android.application", version = "unspecified" }
weatherapp-android-application-compose = { id = "weatherapp.android.application.compose", version = "unspecified" }
weatherapp-android-library = { id = "weatherapp.android.library", version = "unspecified" }
weatherapp-android-library-compose = { id = "weatherapp.android.library.compose", version = "unspecified" }
weatherapp-android-feature-ui = { id = "weatherapp.android.feature.ui", version = "unspecified" }
weatherapp-android-room = { id = "weatherapp.android.room", version = "unspecified" }
weatherapp-jvm-library = { id = "weatherapp.jvm.library", version = "unspecified" }
weatherapp-jvm-ktor = { id = "weatherapp.jvm.ktor", version = "unspecified" }
weatherapp-jvm-junit5 = { id = "weatherapp.jvm.junit5", version = "unspecified" }
weatherapp-android-junit5 = { id = "weatherapp.android.junit5", version = "unspecified" }
weatherapp-android-dynamic-feature = { id = "weatherapp.android.dynamic.feature", version = "unspecified" }

[bundles]
compose = [
    "androidx-activity-compose",
    "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-material3",
    "androidx-ui-graphics",
    "androidx-ui-tooling-preview"
]
compose-debug = [
    "androidx-ui-tooling",
    "androidx-ui-test-manifest"
]
koin = ["koin-core", "koin-android", "koin-android-workmanager"]
koin-compose = ["koin-core", "koin-android", "koin-android-workmanager", "koin-androidx-compose"]
ktor = [
    "ktor-client-auth",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json"
]